{"version":3,"sources":["actions/searchActions.js","utils/QueryHolder.js","components/search-page/search/SearchBar.js","components/search-page/movies-list/Movie.js","components/search-page/movies-list/Movies.js","components/HOC/Loading.js","components/HOC/Errorable.js","components/search-page/movies-list/MoviesContainer.js","components/search-page/pagination/Pagination.js","components/search-page/pagination/PaginationContainer.js","components/search-page/SearchPage.js","components/single-movie-page/SingleMovie.js","components/single-movie-page/SingleMovieContainer.js","components/single-movie-page/SingleMoviePage.js","OmdbApp.js","serviceWorker.js","reducers/searchReducer.js","index.js"],"names":["REQUEST_SEARCH","SEARCH_FINISHED","SEARCH_SINGLE_STARTED","SEARCH_SINGLE_ENDED","URL_WITH_KEY","BASE_URL","fetchMovies","searchQuery","dispatch","type","axios","get","then","resp","data","payload","isSuccessful","errorMessage","totalResults","movies","searchFinished","fetchSingleMovie","movieId","isLoading","foundSingleMovie","QueryHolder","currentQuery","getCurrentQuery","setCurrentQuery","query","SearchBar","props","state","searchValue","year","searchMovie","bind","handleChange","clearSearch","selectYear","options","i","push","key","e","this","setState","target","value","className","onChange","placeholder","defaultValue","onClickCapture","Component","defaultProps","connect","Movie","movieClicked","movie","imdbID","src","Poster","alt","Title","Year","Movies","React","forwardRef","ref","map","propTypes","PropTypes","array","isRequired","func","Loading","width","height","nodeRef","rect","ReactDOM","getBoundingClientRect","style","node","PureComponent","Errorable","children","MoviesContainer","loadableMovies","errorableAndLoadable","history","nextProps","currentState","search","Pagination","currentPage","totalPages","pages","startPage","PAGE_OFFSET","endPage","pageClicked","renderPages","PaginationContainer","page","Math","ceil","Number","SearchPage","SingleMovie","rows","Ratings","ratings","Value","movieKey","Response","hasOwnProperty","SingleMovieContainer","errorText","loadableSingleMovie","match","params","id","singleMovieReducer","Error","SingleMoviePage","back","goBack","OmdbApp","createBrowserHistory","basename","process","exact","path","component","Boolean","window","location","hostname","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunkMiddleware","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.203a1d0d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const REQUEST_SEARCH = 'request_search';\nexport const SEARCH_FINISHED = 'search_finished';\nexport const SEARCH_SINGLE_STARTED = 'request_single_started';\nexport const SEARCH_SINGLE_ENDED = 'request_single_finished';\n\nconst BASE_URL = 'https://www.omdbapi.com/';\nconst API_KEY = 'bcb1b6a3';\nconst URL_WITH_KEY = BASE_URL + \"?apikey=\" + API_KEY;\n\nfunction requestSearch() {\n    return {\n        type: REQUEST_SEARCH,\n\n    }\n}\n\nfunction searchFinished({data}) {\n    return {\n        type: SEARCH_FINISHED,\n        payload: {\n            isSuccessful: data[\"Response\"],\n            errorMessage:data[\"Error\"],\n            totalResults: data[\"totalResults\"],\n            movies: data[\"Search\"]\n        }\n    }\n}\n\n\nfunction requestSingleMovie() {\n\n    return {\n        type: SEARCH_SINGLE_STARTED,\n        isLoading: true\n    };\n}\n\nfunction foundSingleMovie(resp) {\n\n    return {\n        type: SEARCH_SINGLE_ENDED,\n        isLoading: false,\n        data: resp.data\n    };\n}\n\nexport const fetchMovies = searchQuery => dispatch => {\n\n    dispatch(requestSearch());\n\n    axios.get(URL_WITH_KEY + searchQuery)\n        .then(resp => {\n            dispatch(searchFinished(resp))\n        });\n\n};\n\nexport const fetchSingleMovie = movieId => dispatch => {\n    dispatch(requestSingleMovie(movieId));\n\n    axios.get(URL_WITH_KEY + \"&i=\" + movieId)\n        .then(resp => {\n            dispatch(foundSingleMovie(resp))\n        })\n};\n","const QueryHolder = (function () {\n\n    let currentQuery = \"\";\n\n    return {\n        getCurrentQuery: () => currentQuery,\n        setCurrentQuery: (query) => currentQuery = query\n    }\n})();\nexport default QueryHolder","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {fetchMovies} from \"../../../actions/searchActions\";\nimport QueryHolder from \"../../../utils/QueryHolder\";\nimport '../../../styles/search-page/search-bar.css';\nimport '../../../styles/search-page/search-bar-responsive.css';\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchValue: \"\",\n            year: \"\"\n        };\n\n        this.searchMovie = this.searchMovie.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n        this.selectYear = this.selectYear.bind(this);\n\n\n        this.options = (() => {\n            let options = [];\n            for (let i = 2018; i >= 1950; i--) {\n                options.push(<option key={i}>{i}</option>);\n            }\n            return options;\n        })();\n    }\n\n\n    handleChange(e) {\n        this.setState({\n            searchValue: e.target.value\n        })\n    }\n\n    clearSearch() {\n        this.setState({\n            searchValue: \"\",\n            year: \"\"\n        })\n    }\n\n\n    selectYear(e) {\n        if (this.state.year !== e.target.value)\n            this.setState({year: e.target.value});\n\n    }\n\n    searchMovie() {\n        let query = `&s=${this.state.searchValue || '\"\"'}&y=${this.state.year}`;\n        let currentPage = 1;\n        QueryHolder.setCurrentQuery(query);\n        //TODO: cache movies so we can get them back\n        // this.props.history.push(\"/\" + query, this.state);\n        this.props.dispatch(fetchMovies(`${query}&page=${currentPage}`))\n    }\n\n    render() {\n        return (\n            <div className=\"search-bar\">\n                <input\n                    className=\"search-input\"\n                    onChange={this.handleChange}\n                    value={this.state.searchValue}\n                    placeholder=\"Enter a movie\"\n                    type=\"search\"/>\n                <select className=\"sort-select\" onChange={this.selectYear} value={this.state.year}>\n                    <option defaultValue>ANY</option>\n                    {this.options}\n                </select>\n                <button className=\"btn submit-btn\" onClickCapture={this.searchMovie}>Search</button>\n                <button className=\"btn clear-btn\" onClickCapture={this.clearSearch}>Reset</button>\n            </div>\n        )\n    }\n\n}\n\nSearchBar.propTypes = {\n    history: PropTypes.object.isRequired\n};\n\nSearchBar.defaultProps = {};\n\n\nexport default connect()(SearchBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../../styles/search-page/movie.css';\nimport '../../../styles/search-page/movie-responsive.css';\n\nconst Movie = (props) => {\n    return (<div className=\"single-movie\" onClickCapture={() => props.movieClicked(props.movie.imdbID)}>\n        <img className=\"movie-poster\"\n             src={props.movie.Poster === 'N/A' ?\n                 \"https://www.jakartaplayers.org/uploads/1/2/5/5/12551960/2297419_orig.jpg\"\n                 :\n                 props.movie.Poster\n             }\n             alt=\"poster\"/>\n        <h3 className=\"movie-title\">{props.movie.Title}</h3>\n        <p className=\"movie-year\">{props.movie.Year}</p>\n    </div>);\n};\n\nMovie.propTypes = {\n    movie: PropTypes.shape({\n        Poster: PropTypes.string,\n        Title: PropTypes.string,\n        Type: PropTypes.string,\n        Year: PropTypes.string,\n        imdbID: PropTypes.string\n    }).isRequired,\n    movieClicked: PropTypes.func.isRequired\n};\n\nMovie.defaultProps = {};\n\n\nexport default Movie;","import React from 'react';\nimport Movie from \"./Movie\";\nimport PropTypes from 'prop-types';\n\nimport '../../../styles/search-page/movies.css';\n\n/**\n * functional component to render a list of <Movie>, passed as prop from Container component\n */\nconst Movies = React.forwardRef((props, ref) =>\n    <div ref={ref} className=\"movies-container\">\n        {props.movies.map(\n            movie => <Movie key={movie.imdbID} movie={movie} movieClicked={props.movieClicked}/>)}\n    </div>);\n\nMovies.propTypes = {\n    movies: PropTypes.array.isRequired,\n    movieClicked: PropTypes.func.isRequired //prop drilling\n};\n\nMovies.defaultProps = {};\n\n\nexport default Movies;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from \"react-dom\";\n\nimport '../../styles/HOC/loading.css';\n\nconst Loading = Component => {\n    return class Loading extends React.PureComponent {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                width: 0,\n                height: 0\n            };\n\n        }\n\n        /**\n         * Make the overlay as big as the element that is passed\n         */\n        componentDidMount() {\n            if (!this.nodeRef)\n                return;\n\n            let el = ReactDOM.findDOMNode(this.nodeRef);\n            let rect = el.getBoundingClientRect();\n\n            this.setState({\n                width: rect.width,\n                height: rect.height\n            });\n        }\n\n        render() {\n            const style = {\n                width: this.state.width,\n                height: this.state.height\n            };\n            let props = {...this.props};\n            delete props.isLoading;\n\n            return (\n                this.props.isLoading ?\n                    <div className=\"loading-container\">\n                        <div className=\"loading\" style={style}>\n                            <div className=\"circle circle-one\"/>\n                            <div className=\"circle circle-two\"/>\n                            <div className=\"circle circle-three\"/>\n                        </div>\n                        <Component\n                            ref={(node) => this.nodeRef = node}\n                            {...props}>\n                            props.children\n                        </Component>\n                    </div>\n                    ://OR\n                    <Component\n                        ref={(node) => this.nodeRef = node}\n                        {...props}>\n                        props.children\n                    </Component>)\n        }\n    }\n};\n\n\nLoading.propTypes = {isLoading: PropTypes.bool};\n\nLoading.defaultProps = {isLoading: 'false'};\n\n\nexport default Loading;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport '../../styles/HOC/errorable.css';\n\nconst Errorable = (Component) => React.forwardRef((props, ref) => {\n    return(\n    props.errorMessage ?\n        <div className=\"error-box\" ref={ref}>\n            <h2>Error</h2>\n            <div className=\"error-message\">{props.errorMessage}</div>\n        </div>\n        :\n        <Component {...props} ref={ref}>\n            {props.children}\n        </Component>\n)});\n\nErrorable.propTypes = {\n    errorMessage: PropTypes.string\n};\n\nexport default Errorable;","import React, {Component} from 'react';\nimport Movies from \"./Movies\";\nimport {connect} from \"react-redux\";\nimport Loading from \"../../HOC/Loading\";\nimport {fetchSingleMovie} from \"../../../actions/searchActions\";\nimport Errorable from \"../../HOC/Errorable\";\n\nclass MoviesContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n            isLoading: false,\n            errorMessage: \"\"\n        };\n        this.fetchSingleMovie = this.fetchSingleMovie.bind(this);\n\n        this.loadableMovies = Errorable(Movies);\n        this.errorableAndLoadable = Loading(this.loadableMovies);\n    }\n\n    static getDerivedStateFromProps(nextProps, currentState) {\n        return nextProps !== currentState ? nextProps : null;\n    }\n\n    fetchSingleMovie(movieId) {\n        //Redirect to the url\n        this.props.history.push(`/movie/${movieId}`);\n\n        this.props.dispatch(fetchSingleMovie(movieId));\n    };\n\n\n    render() {\n        let Movies = this.errorableAndLoadable;\n        return (\n            <Movies\n                errorMessage={this.state.errorMessage}\n                isLoading={this.state.isLoading}\n                movies={this.state.movies}\n                movieClicked={this.fetchSingleMovie}\n            />\n        )\n    }\n}\n\nMoviesContainer.propTypes = {};\n\nMoviesContainer.defaultProps = {};\n\nconst mapStateToProps = ({search}) => {\n    const {isLoading, data} = search;\n    if (!data)\n        return {\n            isLoading: isLoading,\n            movies: []\n        };\n    const movies = data.movies ? data.movies : [];\n\n    return {\n        isLoading: isLoading,\n        movies: movies,\n        isSuccessful: data.isSuccessful,\n        errorMessage: data.errorMessage,\n        totalResults: data.totalResults\n    }\n};\nexport default connect(mapStateToProps)(MoviesContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../../styles/search-page/pagination.css';\nimport '../../../styles/search-page/pagination-responsive.css';\n\nconst Pagination = (props) => {\n\n    //How much pages around the current page should be rendered\n    const PAGE_OFFSET = 2;\n\n    const renderPages = currentPage => {\n            if (props.totalPages === 0)\n                return;\n\n            let pages = [];\n            let startPage = currentPage < PAGE_OFFSET + 1 ? 1 : currentPage - PAGE_OFFSET;\n            let endPage = currentPage + PAGE_OFFSET + 1 > props.totalPages ? props.totalPages : currentPage + PAGE_OFFSET;\n\n            pages.push(<div className={`page-item previous ${props.currentPage <= 1 ? 'disabled' : ''}`}\n                            key=\"prev\"\n                            onClickCapture={() => props.pageClicked(props.currentPage - 1)}>\n                PREV\n            </div>);\n\n            if (startPage > 1) {\n                pages.push(<div key={1} className=\"page-item\"\n                                onClickCapture={() => props.pageClicked(1)}>\n                    {1}\n                </div>);\n                pages.push(<div key={\"space-before\"} className=\"empty-space\">{\"...\"}</div>);\n            }\n\n            for (let i = startPage; i <= endPage; i++) {\n                pages.push(\n                    <div key={i}\n                         className={`page-item ${i === currentPage ? 'current-page' : ''}`}\n                         onClickCapture={() => props.pageClicked(i)}>\n                        {i}\n                    </div>\n                )\n            }\n\n            if (endPage < props.totalPages) {\n                pages.push(<div key={\"space-after\"} className=\"empty-space\">{\"...\"}</div>);\n                pages.push(\n                    <div key={props.totalPages} className=\"page-item\"\n                         onClickCapture={() => props.pageClicked(props.totalPages)}>\n                        {props.totalPages}\n                    </div>\n                );\n            }\n\n            pages.push(<div className={`page-item next ${props.currentPage === props.totalPages ? 'disabled' : ''}`}\n                            key=\"next\"\n                            onClickCapture={() => props.pageClicked(props.currentPage + 1)}>\n                NEXT\n            </div>);\n            return pages;\n        }\n    ;\n\n    return (\n        <div className=\"pagination\">\n            {\n                renderPages(props.currentPage)\n            }\n        </div>\n    );\n};\n\nPagination.propTypes = {\n    totalPages: PropTypes.number,\n    currentPage: PropTypes.number,\n    pageClicked: PropTypes.func.isRequired\n};\n\nPagination.defaultProps = {\n    totalPages: 0,\n    currentPage: 0\n};\n\n\nexport default Pagination;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Pagination from \"./Pagination\";\nimport {fetchMovies} from \"../../../actions/searchActions\";\nimport QueryHolder from \"../../../utils/QueryHolder\";\n\nconst MOVIES_PER_PAGE = 10;\n\nclass PaginationContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: 1,\n            totalPages: 0\n        };\n\n        this.pageClicked = this.pageClicked.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps, currentState) {\n        if (nextProps.totalPages !== currentState.totalPages)\n            return {currentPage: 1, ...nextProps};\n\n        return nextProps !== currentState ? nextProps : null;\n    }\n\n    pageClicked(page) {\n        if (this.state.currentPage !== page) {\n            this.props.dispatch(fetchMovies(QueryHolder.getCurrentQuery() + \"&page=\" + page));\n            this.setState({\n                currentPage: page\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Pagination\n                currentPage={this.state.currentPage}\n                totalPages={this.state.totalPages}\n                pageClicked={this.pageClicked}\n            />\n        );\n    }\n}\n\nPaginationContainer.propTypes = {};\n\nPaginationContainer.defaultProps = {};\n\nconst mapStateToProps = ({search}) => {\n    const {data} = search;\n    return {\n        totalPages: data.errorMessage ? 0 : Math.ceil(Number(data.totalResults) / MOVIES_PER_PAGE) || 0,\n    }\n};\n\nexport default connect(mapStateToProps)(PaginationContainer);","import React, {Component} from 'react';\nimport SearchBar from \"./search/SearchBar\";\n\nimport '../../styles/search-page/search-page.css';\nimport MoviesContainer from \"./movies-list/MoviesContainer\";\nimport PaginationContainer from \"./pagination/PaginationContainer\";\n\nclass SearchPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <SearchBar {...this.props}/>\n                <MoviesContainer {...this.props}/>\n                <PaginationContainer {...this.props}/>\n            </div>\n        )\n    }\n}\n\nSearchPage.propTypes = {};\n\nSearchPage.defaultProps = {};\n\n\nexport default SearchPage;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../../styles/single-movie-page/single-movie.css';\n\nconst SingleMovie = React.forwardRef((props, ref) => {\n    const movies = (() => {\n        const {movie} = props;\n        if (!movie) return;\n\n        let rows = [];\n\n        rows.push(<div key={'title'}\n                       className={`property-row title`}>\n                    <span className=\"movie-property\">\n                    </span>\n            {movie.Title}\n        </div>);\n\n        if (movie.Ratings && movie.Ratings[0]) {\n            let ratings = movie.Ratings[0].Value;\n            rows.push(<div key={'rating'}\n                           className={`property-row`}>\n                    <span className=\"movie-property\">\n                        {\"Rating: \"}\n                    </span>\n                {ratings}\n            </div>);\n        }\n\n        //Delete properties i wont render\n        delete movie.Ratings;\n        delete movie.Title;\n        delete movie.Response;\n        delete movie.imdbID;\n\n\n        for (let movieKey in movie) {\n            //TODO: maybe this is not the required behavior\n            if (movie[movieKey] === 'N/A' || movieKey === 'Poster')\n                continue; //Dont write N/A props\n\n            if (movie.hasOwnProperty(movieKey)) {\n                rows.push(\n                    <div key={movieKey}\n                         className={`property-row`}>\n                    <span className=\"movie-property\">\n                        {movieKey + \": \"}\n                    </span>\n                        {movie[movieKey]}\n                    </div>\n                )\n            }\n\n        }\n        return rows;\n    })();\n\n    return (<div className=\"single-movie-description\" ref={ref}>\n        <div className=\"image\">\n            <img src={props.movie.Poster === 'N/A' ?\n                \"https://www.jakartaplayers.org/uploads/1/2/5/5/12551960/2297419_orig.jpg\"\n                :\n                props.movie.Poster} alt=\"\"/>\n        </div>\n        <div className=\"movie-properties\">\n            {movies}\n        </div>\n    </div>)\n\n});\n\nSingleMovie.propTypes = {\n    movie: PropTypes.shape({\n        Title: PropTypes.string,\n        Year: PropTypes.string,\n        Released: PropTypes.string,\n        Director: PropTypes.string,\n        imdbRating: PropTypes.string,\n        Country: PropTypes.string,\n        Rated: PropTypes.string,\n        Runtime: PropTypes.string,\n        Genre: PropTypes.string,\n        Writer: PropTypes.string,\n        Actors: PropTypes.string,\n        Language: PropTypes.string,\n        Awards: PropTypes.string,\n        Poster: PropTypes.string,\n        Ratings: PropTypes.arrayOf(PropTypes.shape({\n            Source: PropTypes.string,\n            Value: PropTypes.string\n        })),\n        Metascore: PropTypes.string,\n        imdbVotes: PropTypes.string,\n        imdbID: PropTypes.string,\n        Type: PropTypes.string,\n        DVD: PropTypes.string,\n        BoxOffice: PropTypes.string,\n        Production: PropTypes.string,\n        Website: PropTypes.string,\n        Response: PropTypes.string\n    }).isRequired\n};\n\nSingleMovie.defaultProps = {};\n\n\nexport default SingleMovie;\n\n","import React, {Component} from 'react';\nimport SingleMovie from \"./SingleMovie\";\nimport Loading from \"../HOC/Loading\";\nimport {fetchSingleMovie} from \"../../actions/searchActions\";\nimport {connect} from \"react-redux\";\nimport Errorable from \"../HOC/Errorable\";\n\nclass SingleMovieContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movie: {},\n            isLoading: false,\n            errorText: \"\"\n        };\n\n        this.loadableSingleMovie = Loading(SingleMovie);\n        this.errorableAndLoadable = Errorable(this.loadableSingleMovie);\n    }\n\n    componentDidMount() {\n        this.movieId = this.props.match.params.id;\n        this.props.dispatch(fetchSingleMovie(this.movieId));\n    }\n\n    static getDerivedStateFromProps(nextProps, currentState) {\n        return nextProps !== currentState ? nextProps : null;\n    }\n\n    render() {\n        let SingleMovie = this.errorableAndLoadable;\n        return (\n            <SingleMovie\n                errorMessage={this.state.errorText}\n                movie={this.state.isLoading? {} : this.state.movie}\n                isLoading={this.state.isLoading}/>\n        )\n    }\n}\n\nSingleMovieContainer.propTypes = {};\n\nSingleMovieContainer.defaultProps = {};\n\nconst mapStateToProps = ({singleMovieReducer}) => {\n    const {data, isLoading} = singleMovieReducer;\n\n    return {\n        isLoading: isLoading,\n        movie: data,\n        errorText: data.Error\n    }\n};\nexport default connect(mapStateToProps)(SingleMovieContainer);","import React, {Component} from 'react';\nimport SingleMovieContainer from \"./SingleMovieContainer\";\nimport '../../styles/single-movie-page/single-movie-page.css';\n\nclass SingleMoviePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n        this.back = this.back.bind(this);\n    }\n\n    back() {\n        this.props.history.goBack();\n    }\n\n    render() {\n        return (\n            <div className=\"single-movie-page\">\n                <button className=\"btn go-back\" onClickCapture={this.back}>Go back</button>\n                <SingleMovieContainer {...this.props}/>\n            </div>\n        )\n    }\n}\n\nSingleMoviePage.propTypes = {};\n\nSingleMoviePage.defaultProps = {};\n\n\nexport default SingleMoviePage;","import React from 'react';\nimport {Route, Router, BrowserRouter} from 'react-router-dom'\nimport {createBrowserHistory} from 'history';\n\nimport SearchPage from \"./components/search-page/SearchPage\";\nimport SingleMoviePage from \"./components/single-movie-page/SingleMoviePage\";\nimport './reset-css.css';\nimport './OmdbApp.css';\n\nfunction OmdbApp() {\n    return (\n        <BrowserRouter history={createBrowserHistory()} basename={process.env.PUBLIC_URL}>\n            <Route exact path={\"/\"} component={SearchPage}/>\n            {/*<Route path={\"/:query\"} component={SearchPage}/>*/}\n            <Route path={\"/movie/:id\"} component={SingleMoviePage}/>\n        </BrowserRouter>\n    );\n}\n\nexport default OmdbApp;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. OmdbApp is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {REQUEST_SEARCH, SEARCH_FINISHED, SEARCH_SINGLE_ENDED, SEARCH_SINGLE_STARTED} from \"../actions/searchActions\";\nimport {combineReducers} from \"redux\";\n\nconst search = (state = {\n    isLoading: false,\n    data: {}\n}, action) => {\n    switch (action.type) {\n        case REQUEST_SEARCH: {\n            return {\n                isLoading: true,\n                data: state.data\n            };\n        }\n        case SEARCH_FINISHED: {\n            return {\n                data: action.payload,\n                isLoading: false\n            }\n        }\n        default:\n            return state\n    }\n};\n\nconst singleMovieReducer = (state = {\n    isLoading: true,\n    data: {}\n}, action) => {\n    switch (action.type) {\n        case SEARCH_SINGLE_STARTED : {\n            return {\n                isLoading: true,\n                data: state.data\n            }\n        }\n        case SEARCH_SINGLE_ENDED : {\n            return {\n                data: action.data,\n                isLoading: false\n            }\n        }\n        default:\n            return state\n    }\n};\n\n\nexport default combineReducers({search, singleMovieReducer});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport OmdbApp from './OmdbApp';\nimport {Provider} from 'react-redux'\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from \"./reducers/searchReducer\";\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const logger = createLogger();\nconst store =\n    createStore(reducers,\n        composeEnhancers(\n            applyMiddleware(\n                thunkMiddleware,\n                // logger\n            )));\n\nReactDOM.render(\n    <Provider store={store}>\n        <OmdbApp/>\n    </Provider>,\n    document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}